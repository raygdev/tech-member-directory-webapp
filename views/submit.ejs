<%- include('partials/headers/header') %>

<div class="container">
  <div class="jumbotron centered">
    <h1 class="display-3">Member Projects</h1>
    <p class="project-text">Project Features</p>


    <form enctype="multipart/form-data">
      <div class="form-group">
        <label for="title">Title</label>
        <input
          type="text"
          class="form-control text-center"
          name="title"
          id="title"
          placeholder="Name of Your Project"
          required
        />
        
        <label for="percent-done">Percent Done</label>
        <input
          type="number"
          class="form-control text-center"
          name="percentDone"
          id="percent-done"
          placeholder="Percent Completed"
          min="0"
          max="100"
        />
        
        <label for="description">Description</label>
        <input
          type="text"
          class="form-control text-center"
          name="description"
          id="description"
          placeholder="Description"
        />

        <label for="project-image">Project Image</label>
        <input
          type="file"
          class="form-control-file"
          name="projectImage"
          id="project-image"
          accept="image/*"
        />
        <small class="form-text text-muted">Supported formats: JPG, PNG, GIF</small>
      </div>

      <button type="submit" class="btn btn-dark">Submit</button>
    </form>

    <script>
      async function handleSubmit(event) {
        event.preventDefault();

        const title = document.querySelector("#title");
        const percentDone = document.querySelector("#percent-done");
        const description = document.querySelector("#description");
        const imageFile = document.querySelector("#project-image").files[0];

        // Create FormData object for handling file upload
        const formData = new FormData();
        formData.append("title", title.value);
        formData.append("percentDone", percentDone.value);
        formData.append("description", description.value);

        if (imageFile) {
          // Validate file size (e.g., max 5MB)
          const maxSize = 5 * 1024 * 1024;
          if (imageFile.size > maxSize) {
            alert("Image file must be smaller than 5MB");
            return;
          }
          formData.append("projectImage", imageFile);
        }

        try {
          const response = await fetch('/projects', {
            method: "POST",
            body: formData // Don't set Content-Type header - browser will set it automatically
          });

          if (!response.ok) {
            throw new Error(`Error: ${response.status}`);
          }

          const result = await response.json();
          console.log("Server response:", result);

          window.location.href = "/projects/tables";
        } catch (error) {
          console.error("Error submitting form:", error);
          alert("Error submitting project. Please try again.");
        }
      }

      // Add image preview functionality (optional)
      document.querySelector("#project-image").addEventListener("change", function(event) {
        const file = event.target.files[0];
        if (file && !file.type.startsWith('image/')) {
          alert('Please select an image file');
          this.value = '';
        }
      });

      const form = document.querySelector("form");
      form.addEventListener("submit", handleSubmit);
    </script>
  </div>
</div>

<%- include('partials/footer') %>
